#!/bin/sh /etc/rc.common
# Copyright (C) 2018 Lean <coolsnowwolf@gmail.com>
# Copyright (C) 2019-2021 Tianling Shen <cnsztl@immortalwrt.org>

START=90
STOP=10

EXTRA_COMMANDS="check_status"
EXTRA_HELP="	check_status Check running status of utils"

restart_utils="true"

kernel_mod_exist() {
	local mod_name="$1"
	[ -n "$mod_name" ] && {
	        [ "$(lsmod | grep -c "${mod_name}")" -gt "0" ] || [ -e "/lib/modules/$(uname -r)/${mod_name}.ko" ]
	}
}

inital_conf(){
	config_load "turboacc"
	config_get "sw_flow" "config" "sw_flow" "0"
	config_get "hw_flow" "config" "hw_flow" "0"
	config_get "sfe_flow" "config" "sfe_flow" "0"
	config_get "fullcone_nat" "config" "fullcone_nat" "0"
	config_get "fullcone_nat_mode" "config" "fullcone_nat_mode" "0"
	if !  kernel_mod_exist "nft_flow_offload"  ; then
	        sw_flow="0"; hw_flow="0";
	fi
	if !  kernel_mod_exist "shortcut-fe-cm" ; then
	        sfe_flow="0"
	fi
	if !  kernel_mod_exist "nft_fullcone" ; then
	        # choose brcmfullcone instead
	        fullcone_nat_mode="1"
	fi
}

load_sfe() {
	local kernel_version=$(uname -r)

	[ -e "/lib/modules/$kernel_version/shortcut-fe-cm.ko" ] && modprobe shortcut-fe-cm
	[ -e "/lib/modules/$kernel_version/fast-classifier.ko" ] && modprobe fast-classifier
}

unload_sfe() {
	[ -d /sys/module/shortcut_fe_cm ] && rmmod shortcut_fe_cm
	[ -d /sys/module/fast_classifier ] && rmmod fast_classifier
}

load_nft_fullcone() {
	local kernel_version=$(uname -r)

	[ -e "/lib/modules/$kernel_version/nft_fullcone.ko" ] && modprobe nft_fullcone
}

unload_nft_fullcone() {
	[ -d /sys/module/nft_fullcone ] && rmmod nft_fullcone
}

start(){
	inital_conf

	[ "${sw_flow}" -ne "1" ] && [ "${sfe_flow}" -eq "1" ] && {
		load_sfe
	}
	if [ "${fullcone_nat_mode}" -eq "0" ]; then
		# nft_fullcone
		load_nft_fullcone
	fi
	if [ "${fullcone_nat_mode}" -eq "1" ]; then
		# brcmfullcone
		unload_nft_fullcone
	fi

	uci set firewall.@defaults[0].flow_offloading="${sw_flow}"
	uci set firewall.@defaults[0].flow_offloading_hw="${hw_flow}"
	uci set firewall.@defaults[0].fullcone="${fullcone_nat}"
	uci set firewall.@defaults[0].brcmfullcone="${fullcone_nat_mode}"
	uci commit firewall

	if [ "${restart_utils}" = "true" ]; then
		/etc/init.d/dnsmasq restart >"/dev/null" 2>&1 && echo "DNSMASQ change"
		/etc/init.d/firewall reload >"/dev/null" 2>&1
	fi
}

stop(){
	inital_conf

	unload_sfe
	unload_nft_fullcone

	uci set firewall.@defaults[0].flow_offloading="${sw_flow}"
	uci set firewall.@defaults[0].flow_offloading_hw="${hw_flow}"
	uci set firewall.@defaults[0].fullcone="${fullcone_nat}"
	uci set firewall.@defaults[0].brcmfullcone="${fullcone_nat_mode}"
	uci commit firewall

	if [ "${restart_utils}" = "true" ]; then
		/etc/init.d/dnsmasq restart >"/dev/null" 2>&1 && echo "DNSMASQ revert"
		/etc/init.d/firewall reload >"/dev/null" 2>&1
	fi
}

restart(){
	restart_utils="false"

	stop
	start

	echo "DNSMASQ restart"
	/etc/init.d/dnsmasq restart >"/dev/null" 2>&1
	/etc/init.d/firewall reload >"/dev/null" 2>&1
}

check_status(){
	case "$1" in
	"fastpath")
		if [ "$(cat "/sys/module/nft_flow_offload/refcnt" 2>"/dev/null" || echo 0)" -ne "0" ]; then
			echo -n "Flow Offloading"
			exit 0
		elif [ -d /sys/kernel/debug/ecm/ecm_nss_ipv4 ]; then
			echo -n "QCA-NSS-ECM"
			exit 0
		elif [ -d /sys/kernel/debug/ecm/ecm_sfe_ipv4 ]; then
			echo -n "QCA-ECM-SFE"
			exit 0
		elif [ -d /sys/module/fast_classifier ]; then
			echo -n "Shortcut-FE"
			exit 0
		elif [ -d /sys/module/shortcut_fe_cm ]; then
			echo -n "Shortcut-FE ECM"
			exit 0
		else
			exit 1
		fi
		;;
	"fullconenat")
		if [ "$(cat "/sys/module/nft_fullcone/refcnt" 2>"/dev/null" || echo 0)" -ne "0" ]; then
			echo -n "nft_fullcone originated from Chion82"
			exit 0
		elif nft -s list chain inet fw4 srcnat_wan | grep -qi 'masquerade brcmfullcone'; then
			echo -n "Broadcom ASUS Merlin fullconenat in masquerade"
			exit 0
		else
			exit 1
		fi
		;;
	*)
		exit 2
		;;
	esac
}
